# written by: Juan van Genderen
# Date: 30/03/2022
# Purpose: Automated check of which teams and their level of permissions exist for a list of repositories on GitHub
import requests
import os
from dotenv import load_dotenv


class Credentials:
    # Supply user credentials to sign in to the GitHub API with personal access token from the .env file within the script directory
    load_dotenv()
    login = os.getenv('login')
    token = os.getenv("github_token")

    @staticmethod
    def github_repo_team_perms_checker():

        # Headers supplied so GitHub treats request as coming from a web browser in case it decides to reject the requests
        headers = {'user-agent': ('Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_5)'
                                  'AppleWebKit/537.36 (KHTML, like Gecko)'
                                  'Chrome/45.0.2454.101 Safari/537.36')
                   }
        # Who owns the repositories?
        repo_owner = ""
        # Building the API endpoint to query which will contain the repo from the repo_list we're iterating through
        repo_url = "https://api.github.com/repos/{}/{}/teams"

        # Try to fetch the teams listed for each repository within the Repos.txt file
        try:
            with open('Repos.txt', 'r') as repo_list:
                lines = repo_list.read().splitlines()
                size = os.path.getsize('Repos.txt')
                if size < 1:
                    print(f"Repos.txt is empty!")
                for repos in lines:
                    session = requests.Session()
                    # Building the request which contains the formatted url, headers and login credentials
                    r = session.get(repo_url.format(repo_owner, repos), headers=headers,
                                    auth=(Credentials.login, Credentials.token), timeout=(1, 5))
                    json_response = r.json()
                    r.raise_for_status()
                    print(f"Checking if {repos} exists on Github...\n")
                    if r.status_code // 100 == 2:
                        print(f"**Teams listed in {repos}**\n")
                        for i in json_response:
                            if 'admin' in i['permission']:
                                print("Teams found with Admin permissions:")
                                print(f"Name: {i['name']} \n"
                                      f"Slug: {i['slug']} \n"
                                      f"Description: {i['description']} \n"
                                      f"Permissions: {i['permissions']}\n")
                            if 'push' in i['permission']:
                                print("Teams found with Write permissions:")
                                print(f"Name: {i['name']} \n"
                                      f"Slug: {i['slug']} \n"
                                      f"Description: {i['description']} \n"
                                      f"Permissions: {i['permissions']}\n")
                            if 'pull' in i['permission']:
                                print("Teams found with Read permissions:")
                                print(f"Name: {i['name']} \n"
                                      f"Slug: {i['slug']} \n"
                                      f"Description: {i['description']} \n"
                                      f"Permissions: {i['permissions']}\n")
        except requests.exceptions.Timeout as timeout:
            print(timeout)
        except requests.exceptions.HTTPError as httperror:
            print(httperror)
            print("Check the spelling of the repository and make sure you are authenticated!")
        except FileNotFoundError as nofile:
            print(nofile)
            with open('Repos.txt', 'w') as make_file:
                make_file.write('')
                print(f"**Repos.txt has been automatically created.** \n"
                      f"**Enter each repository name on a new line and save this file!**")


# Main function building
if __name__ == "__main__":
    Credentials = Credentials()
    Credentials.github_repo_team_perms_checker()
